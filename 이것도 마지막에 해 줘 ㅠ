인공지능 기초 기말고사 – RAG vs Agent 기반 문서 QA 체인 비교
컴퓨터공학과 202320958 김수현
1)	시스템 구성
2)	실험 질문 및 응답
3)	응답 내용의 비교
-	정확성
-	표현 방식
-	응답의 길이와 품질
4)	경우에 따른 유리한 체인 분석


1) 시스템 구성
RAG 체인 구성:
문서를 TextSplitter로 분할하고 OpenAI 임베딩 모델을 사용하여 벡터로 변환
Chroma 벡터스토어에 저장한 후, ConversationalRetrievalChain.from_llm()을 통해 QA 체인 생성
Retriever는 사용자 질문에 대해 관련 문서를 검색하고, LLM은 이를 바탕으로 응답 생성
Agent 체인 구성:
Retriever를 tool로 등록하고, 이를 기반으로 initialize_agent()를 통해 zero-shot-react-description 타입의 Agent 구성
사용자의 질문에 대해 어떤 tool을 사용할지 판단하고, 선택한 tool을 실행하여 관찰값을 수집
수집된 관찰값을 바탕으로 최종 응답 구성

2) 실험 질문 및 응답 예시
Q1. LangChain의 주요 구성 요소는 무엇인가요?
RAG 응답: "LangChain은 임베딩 모델, 리트리버, LLM을 결합하여 RAG(검색 기반 생성) 작업을 수행할 수 있도록 지원합니다."
Agent 응답: "LangChain은 임베딩 모델(OpenAI, HuggingFace 등), 리트리버(단순 벡터 검색 또는 다중 단계 추론), 벡터 데이터베이스(예: Chroma), 그리고 웹 검색, 코드 실행, 리트리버 도구 같은 tool을 활용하는 에이전트로 구성됩니다."
Q2. RAG와 챗 에이전트는 문맥(context)을 어떻게 다르게 처리하나요?
RAG 응답: "RAG에서는 리트리버를 사용하여 관련 문서를 검색한 후 이를 LLM에 전달하여 응답에 활용합니다."
Agent 응답: "RAG는 리트리버를 통해 정적인 방식으로 문맥을 주입합니다. 반면 Agent는 다양한 도구를 통해 동적으로 문맥을 수집할 수 있어 입력과 작업에 따라 유연한 추론이 가능합니다."

3) 응답 내용의 비교
정확성:
RAG는 문서 내용 기반으로 사실 위주의 응답을 생성하며, 정확도가 높음
Agent는 retriever tool을 활용하므로 문서 기반 응답을 하면서 reasoning이 추가되어 더 풍부한 정보 제공 가능
표현 방식:
RAG는 직접적이고 요약된 응답 방식 (단일 LLM 호출)
Agent는 observation 기반 응답 생성으로 도구 사용 → reasoning → 결론 구조
응답의 길이와 품질:
RAG: 간결하고 빠름, 문서 기반 핵심 요약에 적합
Agent: 길고 정교하며 reasoning이 포함된 구조, 복합 질의에 유리

4) 경우에 따른 유리한 체인 분석
RAG가 유리한 경우:
단순 문서 QA: "문서에서 정의를 알려줘", "기능을 요약해줘" 등
높은 정확도와 빠른 응답이 필요한 상황
Agent가 유리한 경우:
복합 reasoning이 필요한 상황: "이 기능의 장단점을 비교해줘", "문서 기반 추론을 통해 추천해줘"
외부 연산, 조건 분기, 도구 연계가 필요한 경우
결론적으로, RAG는 context 기반 정적 응답에 강하고, Agent는 유연한 도구 활용과 reasoning에 강점을 보인다. 과업의 성격에 따라 적절한 체인 선택이 중요하다.
